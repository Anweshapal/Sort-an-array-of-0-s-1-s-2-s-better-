import java.util.* ;
import java.io.*; 
public class Solution 
{ public static void sort012(int[] arr)
    {
       int code0=0,code1=0,code2=0;
       int n=arr.length;
       for(int i=0;i<n;i++){
           if(arr[i]==0){
               code0++;
           }
           else if(arr[i]==1){
               code1++;
           }
           else{
               code2++;
           }
       } 

        for (int i = 0; i < code0; i++) {
            arr[i] = 0;
        }
        for (int i = code0; i < code0 + code1; i++) {
            arr[i] = 1;
        }
        for (int i = code0 + code1; i < n; i++) {
            arr[i] = 2;
        }
       
    }
}



Time Complexity: O(N) + O(N), where N = size of the array. First O(N) for counting the number of 0’s, 1’s, 2’s, and second O(N) for placing them correctly in the original array.

Space Complexity: O(1) as we are not using any extra space.
